class StripeFixtures
  def self.subscription
    # Copied from an interactive session in 'rails console' and formatted with lots of coffee â˜•
    {
      id: 'sub_2KC1LV2LsKuf8PTnvJLzsyyW',
      object: 'subscription',
      application_fee_percent: nil,
      automatic_tax: { enabled: false },
      billing_cycle_anchor: 1_640_869_625,
      billing_thresholds: nil,
      cancel_at: nil,
      cancel_at_period_end: false,
      canceled_at: nil,
      collection_method: 'charge_automatically',
      created: 1_640_869_625,
      current_period_end: 1_643_548_025,
      current_period_start: 1_640_869_625,
      customer: 'cus_KlkMhiXwXBECSW',
      days_until_due: nil,
      default_payment_method: nil,
      default_source: nil,
      default_tax_rates: [],
      discount: nil,
      ended_at: nil,
      items: { object: 'list',
               data: [{ id: 'si_Ks8cmxDUSgtHga',
                        object: 'subscription_item',
                        billing_thresholds: nil,
                        created: 1_640_869_625,
                        metadata: { link_to_service_id: '123' },
                        plan: { id: 'price_1KC3FQ2LsKuf8PTnt6V2lJid',
                                object: 'plan',
                                active: true,
                                aggregate_usage: nil,
                                amount: 6000,
                                amount_decimal: '6000',
                                billing_scheme: 'per_unit',
                                created: 1_640_788_524,
                                currency: 'usd',
                                interval: 'month',
                                interval_count: 1,
                                livemode: false,
                                metadata: {},
                                nickname: nil,
                                product: 'prod_KrmporjD4p1DrA',
                                tiers_mode: nil,
                                transform_usage: nil,
                                trial_period_days: nil,
                                usage_type: 'licensed' },
                        price: { id: 'price_1KC3FQ2LsKuf8PTnt6V2lJid',
                                 object: 'price',
                                 active: true,
                                 billing_scheme: 'per_unit',
                                 created: 1_640_788_524,
                                 currency: 'usd',
                                 livemode: false,
                                 lookup_key: nil,
                                 metadata: {},
                                 nickname: nil,
                                 product: 'prod_KrmporjD4p1DrA',
                                 recurring: { aggregate_usage: nil,
                                              interval: 'month',
                                              interval_count: 1,
                                              trial_period_days: nil,
                                              usage_type: 'licensed' },
                                 tax_behavior: 'unspecified',
                                 tiers_mode: nil,
                                 transform_quantity: nil,
                                 type: 'recurring',
                                 unit_amount: 6000,
                                 unit_amount_decimal: '6000' },
                        quantity: 1,
                        subscription: 'sub_2KC1LV2LsKuf8PTnvJLzsyyW',
                        tax_rates: [] },
                      { id: 'si_Ks8gTNKLLZ0AGY',
                        object: 'subscription_item',
                        billing_thresholds: nil,
                        created: 1_640_869_828,
                        metadata: { link_to_service_id: '456' },
                        plan: { id: 'price_1KC3EB2LsKuf8PTnh6fKuOrr',
                                object: 'plan',
                                active: true,
                                aggregate_usage: nil,
                                amount: 4000,
                                amount_decimal: '4000',
                                billing_scheme: 'per_unit',
                                created: 1_640_788_447,
                                currency: 'usd',
                                interval: 'month',
                                interval_count: 1,
                                livemode: false,
                                metadata: {},
                                nickname: nil,
                                product: 'prod_Krmnc7Bas2ayeT',
                                tiers_mode: nil,
                                transform_usage: nil,
                                trial_period_days: nil,
                                usage_type: 'licensed' },
                        price: { id: 'price_1KC3EB2LsKuf8PTnh6fKuOrr',
                                 object: 'price',
                                 active: true,
                                 billing_scheme: 'per_unit',
                                 created: 1_640_788_447,
                                 currency: 'usd',
                                 livemode: false,
                                 lookup_key: nil,
                                 metadata: {},
                                 nickname: nil,
                                 product: 'prod_Krmnc7Bas2ayeT',
                                 recurring: { aggregate_usage: nil,
                                              interval: 'month',
                                              interval_count: 1,
                                              trial_period_days: nil,
                                              usage_type: 'licensed' },
                                 tax_behavior: 'unspecified',
                                 tiers_mode: nil,
                                 transform_quantity: nil,
                                 type: 'recurring',
                                 unit_amount: 4000,
                                 unit_amount_decimal: '4000' },
                        quantity: 5,
                        subscription: 'sub_2KC1LV2LsKuf8PTnvJLzsyyW',
                        tax_rates: [] }],
               has_more: false,
               total_count: 2,
               url: '/v1/subscription_items?subscription=sub_2KC1LV2LsKuf8PTnvJLzsyyW' },
      latest_invoice: 'in_2KC1LV2LsKuf8PTncbMNfYG8',
      livemode: false,
      metadata: {},
      next_pending_invoice_item_invoice: nil,
      pause_collection: nil,
      payment_settings: { payment_method_options: nil, payment_method_types: nil },
      pending_invoice_item_interval: nil,
      pending_setup_intent: nil,
      pending_update: nil,
      plan: nil,
      quantity: nil,
      schedule: nil,
      start_date: 1_640_869_625,
      status: 'active',
      transfer_data: nil,
      trial_end: nil,
      trial_start: nil
    }
  end

  def self.event_charge_refunded
    {
      id: 'evt_3KCjGm2LsKuf8PTn1WSGLARW',
      object: 'event',
      api_version: '2020-08-27',
      created: 1_641_198_679,
      data: {
        object: {
          id: 'ch_3KCjGm2LsKuf8STn1r9mySu1',
          object: 'charge',
          amount: 1000,
          amount_captured: 1000,
          amount_refunded: 1000,
          amount_updates: [],
          application: nil,
          application_fee: nil,
          application_fee_amount: nil,
          balance_transaction: 'txn_3KCjGm2LsKuf8PTn1wHBbUnv',
          billing_details: {
            address: {
              city: nil,
              country: 'US',
              line1: nil,
              line2: nil,
              postal_code: '90046',
              state: nil
            },
            email: nil,
            name: nil,
            phone: nil
          },
          calculated_statement_descriptor: 'ARP NETWORKS',
          captured: true,
          created: 1_640_950_057,
          currency: 'usd',
          customer: 'cus_Ks9OPBxRy92erm',
          description: 'Subscription creation',
          destination: nil,
          dispute: nil,
          disputed: false,
          failure_code: nil,
          failure_message: nil,
          fraud_details: {
          },
          invoice: 'in_1KCjGm2LsKuf8PTnux96o02a',
          livemode: false,
          metadata: {
          },
          on_behalf_of: nil,
          order: nil,
          outcome: {
            network_status: 'approved_by_network',
            reason: nil,
            risk_level: 'normal',
            risk_score: 10,
            seller_message: 'Payment complete.',
            type: 'authorized'
          },
          paid: true,
          payment_intent: 'pi_3KCjGm2LsKuf8PTn1k0YbAKy',
          payment_method: 'pm_1KCP6L2LsKuf8PTnPCVDI64U',
          payment_method_details: {
            card: {
              brand: 'visa',
              checks: {
                address_line1_check: nil,
                address_postal_code_check: 'pass',
                cvc_check: nil
              },
              country: 'US',
              exp_month: 11,
              exp_year: 2023,
              fingerprint: 'ojXtw1yzCn0N0mB8',
              funding: 'credit',
              installments: nil,
              last4: '1111',
              network: 'visa',
              three_d_secure: nil,
              wallet: nil
            },
            type: 'card'
          },
          receipt_email: nil,
          receipt_number: '2831-2477',
          receipt_url: 'https://pay.stripe.com/receipts/foo',
          refunded: true,
          refunds: {
            object: 'list',
            data: [
              {
                id: 're_3KCjGm2LsKuf8PTn1001BPip',
                object: 'refund',
                amount: 1000,
                balance_transaction: 'txn_3KCjGm2LsKuf8PTn1OyVEgZZ',
                charge: 'ch_3KCjGm2LsKuf8STn1r9mySu1',
                created: 1_641_198_679,
                currency: 'usd',
                metadata: {
                },
                payment_intent: 'pi_3KCjGm2LsKuf8PTn1k0YbAKy',
                reason: 'requested_by_customer',
                receipt_number: nil,
                source_transfer_reversal: nil,
                status: 'succeeded',
                transfer_reversal: nil
              }
            ],
            has_more: false,
            total_count: 1,
            url: '/v1/charges/ch_3KCjGm2LsKuf8STn1r9mySu1/refunds'
          },
          review: nil,
          shipping: nil,
          source: nil,
          source_transfer: nil,
          statement_descriptor: nil,
          statement_descriptor_suffix: nil,
          status: 'succeeded',
          transfer_data: nil,
          transfer_group: nil
        },
        previous_attributes: {
          amount_refunded: 0,
          refunded: false,
          refunds: {
            data: [],
            total_count: 0
          }
        }
      },
      livemode: false,
      pending_webhooks: 3,
      request: {
        id: 'req_GRnQ8M0sqz9UL6',
        idempotency_key: '93162240-6b4d-41a3-a862-834fe4325f87'
      },
      type: 'charge.refunded'
    }
  end

  def self.event_customer_subscription_created
    {
      id: 'evt_3KCjGm2LsKuf8PTn1WSGLARW',
      object: 'event',
      api_version: '2020-08-27',
      created: 1_641_198_679,
      data: {
        object: {}.merge(subscription)
      },
      livemode: false,
      pending_webhooks: 3,
      request: {
        id: 'req_F7ElzSMOjQH3Vg',
        idempotency_key: 'fbc0e7f7-7fb6-48d2-a2ac-8dcb027ff92c'
      },
      type: 'customer.subscription.created'
    }
  end
end
